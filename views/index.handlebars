<!DOCTYPE html>
<html>
  <head>

  <title>Mango</title>

  <meta charset="UTF-8">
  <!-- <meta http-equiv="X-UA-Compatible" content="IE=edge"> -->
<!--   <meta name="viewport" content="width=device-width, initial-scale=1"> -->
  <meta name="description" content="">
  <meta name="author" content="">

    <!-- JQuery, and Bootstrap Files/Stylesheets -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <!--from Bootstrap templates  -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <!-- <title>Stylish Portfolio - Start Bootstrap Theme</title> -->
    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/stylish-portfolio.css" rel="stylesheet">

    <!-- Custom Fonts -->
    <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic" rel="stylesheet" type="text/css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head> 



<body>

    <!-- Header -->
    <header id="top" class="header">
        <div class="text-vertical-center">
            <h1>Mango</h1>
            <h3>Create Your Itinerary by Selecting Photos</h3>
            <br>
            <div id="locationField">
              <form ref = "uploadForm" id = "uploadForm" action = "/" method = "post" encType = "multipart/form-data">
                <input type = "file" name = "file" id = "fileupload" />
                <!-- gets location from user, uses autocomplete search from google maps api -->
                <input id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text"/>
                <input type="Submit" value="Upload Picture" id = "submit" placeholder = "Add Mango!" onclick = "getAddress()" width = "30"/>
              </form>
            </div>

        </div>
    </header>


    <!-- Portfolio -->
    <section id="portfolio" class="portfolio">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-lg-offset-1 text-center">
                    <h2>Available Mangos</h2>
                    <hr class="small">
                    <div id = "mangos" class="row">

                    </div>
              </div>
            </div>
        </div> 
    </section> 


<!-- create script for adding images that exist in folder, and assigning values for respective images -->
<script>
   $.getJSON("images/imageinfo/imageAddress.json", function(json) {
          console.log(json); // access the response object
          var newHTML = "";
          for (var key in json){
            if (json.hasOwnProperty(key)){
              console.log(key + ' -> ' + json[key]);
              newHTML += setHTML(key,json[key]);
            }
          }

          document.getElementById('mangos').innerHTML = newHTML;

      });

   function setHTML(name, location){
      HTML = "<div class='col-md-6'><div class='portfolio-item'><img class='img-portfolio img-responsive' src='/images/uploads/" + name +"' value = '"+ location +"''></div></div>";
      return HTML;
   }
  // $( document ).ready(function() {
  //     loadFile();
  // });
</script>


<script>

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }


      function getAddress(){
        //get address from input box
        var address = document.getElementById('autocomplete').value;
        //filename, not including prev path
        var fileName =  Date.now() + '_' + document.getElementById('fileupload').value.substring(12);

        var photoInfo = {
            "fileName" : fileName,
            'address' : address
        }
        //stringify as json, send info over to backend, hopefully
        
        var r = new XMLHttpRequest();   // new HttpRequest instance 
        r.open("POST", "/");

        r.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        r.send(JSON.stringify(photoInfo));
      }

      $( document ).ready(function() {
          getAddress();
      });
    </script>



<div id="map"></div>
<div id="right-panel">
<div>
<br>
  <input type="submit" id="submit" onclick = "createAddressArray()" value = "Mango!">
</div>
<div id="directions-panel"></div>
</div>
<!-- Script for taking in which pictures (array indexes) were clicked and then creating array of addresses that include the ones that were clicked-->
<!-- Script for generating map -->
<!-- inline bc didn't work when I placed script in js file -->
    <script>
      var checkedImgArray = [];

      function initMap() {

        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 6,
          // set center to home address longitude/latitude
          center: {lat: 37.279518, lng: -121.867905}
        });
        directionsDisplay.setMap(map);

        document.getElementById('submit').addEventListener('click', function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        });

                // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', function() {});
      }



      function calculateAndDisplayRoute(directionsService, directionsDisplay) {
        var waypts = [];
        var addressArray = createAddressArray();
        for (var i = 0; i < addressArray.length; i++) {
          // console.log(checkboxArray[i].value);
            waypts.push({
              location: addressArray[i],
              stopover: true
            });
        }
// click at least two for now to create origin and destination 
        directionsService.route({
          origin: addressArray[0],
          destination: addressArray[1],
          waypoints: waypts,
          optimizeWaypoints: true,
          travelMode: 'DRIVING'
        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response);
            var route = response.routes[0];
            var summaryPanel = document.getElementById('directions-panel');
            summaryPanel.innerHTML = '';
            // For each route, display summary information.
            for (var i = 0; i < route.legs.length; i++) {
              var routeSegment = i + 1;
              summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                  '</b><br>';
              summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
              summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
              summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
            }
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }

// bug: checked img array is longer than it should be, does google maps have extra img tags? probably
    function getAllImages(){
    //uh-mazingggg
      window.onload=function()
      {
          var imgs=document.getElementsByTagName('img');
          for(var i=0; i<imgs.length; i++)
          { 
            checkedImgArray[i] = false;//all imgs are not yet checked
              imgs[i].id='x'+i; // An ID can't begin with a number, hence the "x".
              imgs[i].onclick=function()
              {
                var val = this.id.replace('x','');
                  console.log(val); // Remove "x" and [b]i[/b] remains.
                  if (checkedImgArray[val] == true){//update values if img is clicked on
                    checkedImgArray[val] = false;
                  } else if (checkedImgArray[val] == false){
                    checkedImgArray[val] = true;
                  } //css transition
              }

          }
      }
      console.log(checkedImgArray);
      console.log(checkedImgArray.length);
    }



    // create address array
    function createAddressArray(){
      var counter = 0;
      var addressArray = [];
      var imgs = document.getElementsByTagName('img');
      for(var i = 0; i<imgs.length;i++){
        if (checkedImgArray[i] == true){
          console.log(imgs[i])
          addressArray[counter] = imgs[i].getAttribute("value");
          counter++;
        }
      }

      console.log(addressArray);
      return addressArray;
    }


    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfQfu_lYvY-Bea1Ir2sMchTvMqS_AItc4&callback=initMap&libraries=places">
    </script>
  <!-- <script src = "/js/imageListener.js"></script> -->
<!--   <script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfQfu_lYvY-Bea1Ir2sMchTvMqS_AItc4">
  </script> -->
</body> 
</html>